class Solution {
public:
    int minDays(vector<int>& bloomDay, int m, int k) {
        int n=bloomDay.size();
        if(m*k>n) return -1;
        
        int low=1;
        int high=1;
        for(int i=0;i<n;i++){
            high=max(high,bloomDay[i]);
        }
        while(low<high){
            int days=(high-low)/2+low;
            if(canMake(bloomDay,m,k,days)){
                high=days;
            }
            else{
                low=days+1;
            }
        }
        return low;


    }

    bool canMake(vector<int>& bloomDay,int m,int k,int days){
        int flowers=0;
        int bouquets=0;
        int length=bloomDay.size();
        for(int i=0;i<length && bouquets<m;i++){
            if(bloomDay[i]<=days){
                flowers++;
                if(flowers==k){
                    bouquets++;
                    flowers=0;
                }
            }
            else{
                flowers=0;
            }
        }
        return bouquets >= m;
    }
};
