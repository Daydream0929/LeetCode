#include<iostream>
using namespace std;
string s1, s2;
int length;

void dfs(int l, int r) {
	
	int pos = 0;  //根所在中序序列的位置
	for (int i = 0; i <= length; i++) {  //遍历层次序列
		int flag = 0;
		for (int j = l; j <= r; j++) {  //遍历当前中序序列其中左端点l，右端点len
			if (s2[i] == s1[j]) {
				pos = j;         //找到pos位置
				cout << s2[i];
				flag = 1;
				break;
			}
		}
		if (flag) {
			break;
		}
	}
	if (pos > l) {          //递归左子树
		dfs(l, pos - 1);
	}
	if (pos < r) {           //递归右子树
		dfs(pos + 1, r);
	}

}

int main() {
	cin >> s1 >> s2;
	length = s1.size();
	dfs(0, length);
	return 0;

}
