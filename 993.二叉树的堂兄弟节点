/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    int xd=0,yd=0;
    TreeNode* xp=NULL;
    TreeNode* yp=NULL;
public:
    bool isCousins(TreeNode* root, int x, int y) {
        dfs(root,x,y,0);
        return xd==yd && xp!=yp;
    }
    void dfs(TreeNode* root,int x,int y,int deep){
        if(!root) return;
        if(root->left){
            if(root->left->val==x){
                xd=deep+1;
                xp=root;
            }
            if(root->left->val==y){
                yd=deep+1;
                yp=root;
            }
            dfs(root->left,x,y,deep+1);
        }
        if(root->right){
            if(root->right->val==x){
                xd=deep+1;
                xp=root;

            }
            if(root->right->val==y){
                yd=deep+1;
                yp=root;
            }
            dfs(root->right,x,y,deep+1);
        }
    }
};
